1. State the problem.
    Calculate the rank two tensors U_L and U_R by contracting corresponding
tensors and doing svd decomposition.

2. Define the inputs and outputs.
    The inputs required by this program are the two input tensors 'Ta', 'Tb' and
the bond dimension 'Dbond'. 

    The outputs are the truncated matric 'Gauge' and the truncation error
'TrunError'. 

3. Design the algorithm.
    This program can be break down into the following major steps:
    a. contract 'Ta(1,2,3,4)' (1,3) index with 'Ta(1',2',3',4')' (1',3') index: 
                                           __________ 
           3            3'               3/          \3'   
           |            |                |            |
           |            |                |            |
       1---|---2   1'---|---2' --->  1---|----2  1'---|----2' 
           |            |             \__|________/   |
           |            |                |            |   
           4            4'               4            4'
      Ta(1,2,3,4)  Ta(1',2',3',4')         T1(2,4,2',4')         
    
    b. contract 'Tb(5,6,4,7)' (1,4)(which is the actual (5,7) as marked below) 
index with 'Tb(5',6',4',7')' (1,4)(which is the actual (5',7') as marked below)
index: 
                                          
           4            4'               4            4'   
           |            |                |            |
           |            |                |            |
       5---|---6   5'---|---6' --->  5---|----6  5'---|----6' 
           |            |             \__|________/   |
           |            |                |            |   
           7            7'               7\__________/7'
      Tb(5,6,4,7)  Tb(5',6',4',7')         T2(6,4,6',4')         

    Notice that the lower index 4 and 4' in the step a is the same as the upper
index 4 and 4' in the step b. That is because we are trying to make the index 
consistant.

    c. contract 'T1(2,4,2',4')' (2,4)(which is (4,4') as marked below) index
with 'T2(6,4,6',4')(which is (4,4') as marked below) index:

            T1(2,4,2',4')         
             __________ 
           3/          \3'   
           |            |
           |            |
       1---|----2  1'---|----2' 
        \__|________/   |
           |            |   
          4|          4'|
           |            |      ---> M1(2,2',6,6')  ---> M1(26,2'6')     
           |            |                   
          4|          4'|   
           |            |
           |            |
       5---|----6  5'---|----6' 
        \__|________/   |
           |            |   
           7\__________/7'
            T2(6,4,6',4')         

    reorder the index of M1 and reshape it to be a matrix: 
    ABorder = (1,3,2,4)
    squeeze = (2,2)

    d. do a svd decomposition of the M1 matrix to get U2

             ________________ 
           3/                \3'   
           |                 |
           |   2             |   2'   
       1---|----        1'---|---- 
        \__|____\________/   |    \
           |     \           |     \
          4|      \        4'|      \
           |       \__U2     |       \__U2^(+) 
           |       /         |       /            
          4|      /        4'|      /
           |     /           |     /
           |    /            |    /
       5---|----        5'---|---- 
        \__|____6________/   |    6'
           |                 |   
           7\_______________/7'

            M1(26,2'6') = M* M^(+) = U2*A2*U2^(+)  
    where M^(+) means the conjugate transpose the the matrix M, and A is the 
eigenvalues of M*M^(+).

    e. we can do similar things to get U1, which is sketched in the following:

       
                                           __________ 
           3            3'               3/          \3'   
           |            |                |            |
           |            |                |            |
       1---|---2   1'---|---2' --->  1---|----2  1'---|----2' 
           |            |                |    \_______|___/   
           |            |                |            |   
           4            4'               4            4'
      Ta(1,2,3,4)  Ta(1',2',3',4')         T1(1,4,1',4')         

                                          
           4            4'               4            4'   
           |            |                |            |
           |            |                |            |
       5---|---6   5'---|---6' --->  5---|----6  5'---|----6' 
           |            |                |    \_______|___/   
           |            |                |            |   
           7            7'               7\__________/7'
      Tb(5,6,4,7)  Tb(5',6',4',7')         T2(5,4,5',4')         

            T1(1,4,1',4')         
             __________ 
           3/          \3'   
           |            |
           |            |
       1---|----2  1'---|----2' 
           |    \_______|___/   
           |            |   
          4|          4'|
           |            |      ---> M2(1,1',5,5')  ---> M2(15,1'5')     
           |            |                   
          4|          4'|   
           |            |
           |            |
       5---|----6  5'---|----6' 
           |    \_______|____/
           |            |   
           7\__________/7'
            T2(5,4,5',4')         


                    ________________ 
                  3/                \3'   
                  |                 |
               1  |   2             |   2'   
               ---|----        1'---|---- 
              /   |    \________/___|___/  
             /    |            /    |    
            /    4|           /   4'|   
         __/      |        __/      |  
        U1 \      |       U1 \      | 
            \    4|           \   4'|
             \    |            \    | 
              \   |   6         \5' |   6'
               ---|----          ---|---- 
               5  |    \____________|___/
                  |                 |   
                  7\_______________/7'
       
            M2(15,1'5') = M* M^(+) = U1*A1*U1^(+)  

    f. calculate the truncation error epsilon1 and epsilon2:
    epsilon1 = sum(A1i,i = D + 1, end)
    epsilon2 = sum(A2i,i = D + 1, end)

    g. if epsilon1 < epsilon2, then Gauge = U1; else Gauge = U2.

    h. reshape Gauge.


    The pseudo code for this procedure is

    ! contract Ta with Ta
    T1 = TensorContract( Ta, Ta, 4, (/1,3/), 4, (/1,3/)
    
    ! contract Tb with Tb
    T2 = TensorContract( Tb, Tb, 4, (/1,4/), 4, (/1,4/)
   
    ! contract T1 with T2
    M1 = TensorContract( T1, T2, 4, (/2,4/), 4, (/2,4/), (/1,3,2,4/), (/2,2/)

    ! make M1 symmetric to eliminate the round off error
    M1 = (M1 + M1')/2

    ! calculate U2
    U2 = DGESVD( JOBU, JOBVT, M, N, A, LDA, S, U, LDU, VT, LDVT, WORK, LWORK, INFO ) 

    ! contract Tb with Tb
    T1 = TensorContract( Ta, Ta, 4, (/2,3/), 4, (/2,3/)
    
    ! contract Tb with Tb
    T2 = TensorContract( Tb, Tb, 4, (/2,4/), 4, (/2,4/)
   
    ! contract T1 with T2
    M1 = TensorContract( T1, T2, 4, (/2,4/), 4, (/2,4/), (/1,3,2,4/), (/2,2/)

    ! make M1 symmetric to eliminate the round off error
    M1 = (M1 + M1')/2

    ! calculate U1
    U1 = DGESVD( JOBU, JOBVT, M, N, A, LDA, S, U, LDU, VT, LDVT, WORK, LWORK, INFO ) 

    ! get truncation error
    tr1 = sum(
    tr2 = 
    TrunError = min( Tr1, Tr2)

    ! get Gauge
    IF ( Tr1 <= Tr2 ) THEN
        U1( :, Dbond +1 : end ) = []
        Gauge = U1
    ELSE
        U2( :, Dbond +1 : end ) = []
        Gauge = U2
    END IF

    ! reshape Gauge
    dim1 = size(Ta, 1)
    dim2 = size(Tb, 1)
    Gauge = reshape( Gauge, dim1, dim2, size( Gauge, 2))

        
